from docx import Document
import pandas as pd
import os
from tkinter import filedialog
from tkinter import Tk
import openpyxl as px

def read_docx(file_path):
    doc = Document(file_path)
    result = []
    for para in doc.paragraphs:
        result.append(para.text)
    return ' '.join(result)

# GUI for selecting Excel file for company names
root = Tk()
root.withdraw()
excel_file_path = filedialog.askopenfilename(title="Select the Excel file for Company Names", filetypes=[('Excel files', '*.xlsx')])

if not excel_file_path:
    print("No Excel file selected for company names. Exiting...")
    exit()

# Read Excel file into DataFrame, reading only column C starting from row 6 in the 'Event Details' sheet
try:
    df = pd.read_excel(excel_file_path, usecols="C", skiprows=5, header=None, sheet_name='Event Details')
    if df.empty:
        print("The DataFrame is empty. Ensure the selected Excel file has data in column C starting from row 6.")
        exit()
    df.columns = [0]
except Exception as e:
    print(f"Error: {e}")
    exit()

excel_companies = df[0].dropna().tolist()

# GUI for selecting Excel file for 'BR Text Conversion'
br_excel_path = filedialog.askopenfilename(title="Select the Excel file for BR Text Conversion", filetypes=[('Excel files', '*.xlsx')])

if not br_excel_path:
    print("No Excel file selected for BR Text Conversion. Exiting...")
    exit()

try:
    br_df = pd.read_excel(br_excel_path, sheet_name='Sheet')
except Exception as e:
    print(f"Error: {e}")
    exit()

# Create a new column in br_df for 'Company Name' if it doesn't already exist
if 'Company Name' not in br_df.columns:
    br_df['Company Name'] = None

# Loop through each path provided in the 'BR Text Conversion' Excel column
for index, row in br_df.iterrows():
    file_path = row['BR Text Conversion']
    if os.path.exists(file_path) and file_path.endswith(".docx"):
        docx_text = read_docx(file_path)

        # Check if any company name from the Excel list is found in the docx
        extracted_companies = []
        for company in excel_companies:
            if company.lower() in docx_text.lower():
                extracted_companies.append(company)

        extracted_companies_str = ', '.join(extracted_companies) if extracted_companies else 'Not Found'
        br_df.loc[index, 'Company Name'] = extracted_companies_str
    else:
        print(f"Invalid file path or file is not a .docx file: {file_path}")

# Save the result back to the same Excel file, overwriting the sheet
try:
    br_df.to_excel(br_excel_path, sheet_name='Sheet', index=False)
except Exception as e:
    print(f"Error: {e}")
    exit()

# Open the Excel file with openpyxl and make the paths clickable
try:
    book = px.load_workbook(br_excel_path)
    sheet = book['Sheet']
    for row in sheet.iter_rows(min_row=2, max_row=sheet.max_row, min_col=7, max_col=9):  # adjusted min_col to 7 for column G, max_col to 9 for column I
        for cell in row:
            if cell.value and (cell.col_idx == 7 or cell.col_idx == 9):  # checking if the column index is 7 (G) or 9 (I)
                cell.hyperlink = cell.value
    book.save(br_excel_path)
except Exception as e:
    print(f"Error: {e}")
