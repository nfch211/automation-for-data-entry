import os
import tkinter as tk
from tkinter import filedialog, messagebox
from docx import Document
import re
import pandas as pd
from fuzzywuzzy import fuzz

def select_folder():
    folder_path = filedialog.askdirectory(title="Select Folder")
    if folder_path:
        entry_folder.delete(0, tk.END)
        entry_folder.insert(tk.END, folder_path)

def select_word_file():
    word_file = filedialog.askopenfilename(title="Select Word File", filetypes=[("Word Files", "*.docx")])
    if word_file:
        entry_word_file.delete(0, tk.END)
        entry_word_file.insert(tk.END, word_file)

def select_output_folder():
    output_folder = filedialog.askdirectory(title="Select Output Folder")
    if output_folder:
        entry_output.delete(0, tk.END)
        entry_output.insert(tk.END, output_folder)

def import_excel_list():
    excel_path = filedialog.askopenfilename(title="Import Excel List", filetypes=[("Excel Files", "*.xlsx;*.xls")])
    if excel_path:
        entry_excel.delete(0, tk.END)
        entry_excel.insert(tk.END, excel_path)

def rename_files_with_id():
    folder_path = entry_folder.get()
    word_file = entry_word_file.get()
    output_folder = entry_output.get()
    excel_path = entry_excel.get()

    if not folder_path or not word_file or not output_folder or not excel_path:
        messagebox.showerror("Error", "Please select input folder, Word file, output folder, and import Excel list.")
        return

    # Create the output folder if it doesn't exist
    os.makedirs(output_folder, exist_ok=True)

    # Read the Excel list of IDs
    try:
        df = pd.read_excel(excel_path)
    except Exception as e:
        messagebox.showerror("Error", f"Failed to read the Excel list. Error: {str(e)}")
        return

    # Get the IDs from the Excel list
    id_list = df["ID"].tolist()

    # Open the Word file
    try:
        doc = Document(word_file)
    except Exception as e:
        messagebox.showerror("Error", f"Failed to open the Word file. Error: {str(e)}")
        return

    # Read the content of the Word file
    content = ""
    for paragraph in doc.paragraphs:
        content += paragraph.text

    # Find potential IDs using regular expression
    matches = re.findall(r"\b[0-9A-Za-z]{15,18}\b", content)
    if matches:
        # Check for a match with the IDs in the Excel list using fuzzy matching
        matching_ids = [id for id in matches if any(fuzz.ratio(id, excel_id) >= 70 for excel_id in id_list)]
        if len(matching_ids) > 0:
            # Get the best matching ID (based on the highest fuzzy match ratio)
            best_matching_id = max(matching_ids, key=lambda x: fuzz.ratio(x, content))
            # Rename the PDF files in the input folder using the matching ID
            for filename in os.listdir(folder_path):
                file_path = os.path.join(folder_path, filename)
                if os.path.isfile(file_path) and filename.endswith(".pdf"):
                    # Rename the PDF file using the matching ID
                    new_name = best_matching_id + ".pdf"
                    new_path = os.path.join(output_folder, new_name)
                    # Handle duplicate file names
                    count = 1
                    while os.path.exists(new_path):
                        base_name, extension = os.path.splitext(new_name)
                        new_name = f"{base_name}_{count}{extension}"
                        new_path = os.path.join(output_folder, new_name)
                        count += 1
                    # Rename the file
                    if file_path != new_path:
                        os.rename(file_path, new_path)

    messagebox.showinfo("Renaming Complete", "PDF files renamed successfully.")

# Create the Tkinter window
window = tk.Tk()
window.title("PDF File Renamer")

# Create and place the input folder selection widgets
label_folder = tk.Label(window, text="Select PDF Folder:")
label_folder.pack()

entry_folder = tk.Entry(window, width=50)
entry_folder.pack()

button_select_folder = tk.Button(window, text="Select", command=select_folder)
button_select_folder.pack()

# Create and place the Word file selection widgets
label_word_file = tk.Label(window, text="Select Word File:")
label_word_file.pack()

entry_word_file = tk.Entry(window, width=50)
entry_word_file.pack()

button_select_word_file = tk.Button(window, text="Select", command=select_word_file)
button_select_word_file.pack()

# Create and place the output folder selection widgets
label_output = tk.Label(window, text="Select Output Folder:")
label_output.pack()

entry_output = tk.Entry(window, width=50)
entry_output.pack()

button_select_output = tk.Button(window, text="Select", command=select_output_folder)
button_select_output.pack()

# Create the import Excel list widgets
label_excel = tk.Label(window, text="Import Excel List:")
label_excel.pack()

entry_excel = tk.Entry(window, width=50)
entry_excel.pack()

button_import_excel = tk.Button(window, text="Import", command=import_excel_list)
button_import_excel.pack()

# Create the rename button
button_rename = tk.Button(window, text="Rename PDF Files", command=rename_files_with_id)
button_rename.pack()

# Start the Tkinter event loop
window.mainloop()
