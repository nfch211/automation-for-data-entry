import os
import tkinter as tk
from tkinter import filedialog, messagebox
from PyPDF2 import PdfFileReader, PdfFileWriter
from PIL import Image
from shutil import copyfile

def select_pdf_folder():
    pdf_folder_path = filedialog.askdirectory(title="Select Folder")
    if pdf_folder_path:
        entry_pdf_folder.delete(0, tk.END)
        entry_pdf_folder.insert(tk.END, pdf_folder_path)

def select_output_folder():
    output_folder_path = filedialog.askdirectory(title="Select Output Folder")
    if output_folder_path:
        entry_output.delete(0, tk.END)
        entry_output.insert(tk.END, output_folder_path)

def extract_last_page():
    pdf_folder_path = entry_pdf_folder.get()
    output_folder_path = entry_output.get()

    if not pdf_folder_path or not output_folder_path:
        messagebox.showerror("Error", "Please select the folder and output folder.")
        return

    # Create the output folder if it doesn't exist
    os.makedirs(output_folder_path, exist_ok=True)

    # Iterate through files in the folder
    for filename in os.listdir(pdf_folder_path):
        file_path = os.path.join(pdf_folder_path, filename)
        if os.path.isfile(file_path):
            output_file_path = os.path.join(output_folder_path, filename)
            try:
                if filename.endswith(".pdf"):
                    # Read the PDF file
                    with open(file_path, "rb") as pdf_file:
                        pdf_reader = PdfFileReader(pdf_file)
                        num_pages = pdf_reader.numPages

                        # Extract the last page
                        last_page = pdf_reader.getPage(num_pages - 1)

                        # Create a new PDF file and add the last page
                        output_pdf_writer = PdfFileWriter()
                        output_pdf_writer.addPage(last_page)

                        # Save the output PDF file
                        with open(output_file_path, "wb") as output_pdf_file:
                            output_pdf_writer.write(output_pdf_file)
                elif filename.endswith(".jpg") or filename.endswith(".png"):
                    # Copy image files directly to the output folder
                    copyfile(file_path, output_file_path)

            except Exception as e:
                print(f"Failed to process file '{file_path}': {str(e)}")

    messagebox.showinfo("Extraction Complete", "Last pages and images extracted successfully.")

# Create the Tkinter window
window = tk.Tk()
window.title("Last Page and Image Extractor")

# Create and place the PDF folder selection widgets
label_pdf_folder = tk.Label(window, text="Select Folder:")
label_pdf_folder.pack()

entry_pdf_folder = tk.Entry(window, width=50)
entry_pdf_folder.pack()

button_select_pdf_folder = tk.Button(window, text="Select", command=select_pdf_folder)
button_select_pdf_folder.pack()

# Create and place the output folder selection widgets
label_output = tk.Label(window, text="Select Output Folder:")
label_output.pack()

entry_output = tk.Entry(window, width=50)
entry_output.pack()

button_select_output = tk.Button(window, text="Select", command=select_output_folder)
button_select_output.pack()

# Create the extract button
button_extract = tk.Button(window, text="Extract Last Pages and Copy Images", command=extract_last_page)
button_extract.pack()

# Start the Tkinter event loop
window.mainloop()
