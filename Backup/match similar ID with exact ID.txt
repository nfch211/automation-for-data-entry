import pandas as pd
from difflib import SequenceMatcher
import easygui
import os
import xlsxwriter
import math

def similar(a, b):
    return SequenceMatcher(None, a, b).ratio()

# GUI to select files and output directory
similar_ID_file = easygui.fileopenbox(msg='Select the Similar ID Excel file')
exact_ID_file = easygui.fileopenbox(msg='Select the Exact ID Excel file')
output_dir = easygui.diropenbox(msg='Select output directory')
pdf_dir = easygui.diropenbox(msg='Select the directory where PDFs are saved')

# Read Excel files
df1 = pd.read_excel(similar_ID_file)
df2 = pd.read_excel(exact_ID_file)

# Create an empty DataFrame to store results
df_matched = pd.DataFrame(columns=['ExactID', 'Extracted Code', 'File Name', 'Similarity', 'Remarks', 'PDF Link'])
df_unmatched = pd.DataFrame(columns=['Extracted Code', 'File Name', 'PDF Link'])

for j, row2 in df2.iterrows():
    similarity_scores = [(similar(str(row1['Extracted Code']), str(row2['ExactID'])), i) for i, row1 in df1.iterrows()]
    similarity_scores.sort(reverse=True)

    if similarity_scores and similarity_scores[0][0] >= 0.8:
        i = similarity_scores[0][1]
        pdf_link = ''
        for ext in ['.pdf', '.jpg']:
            temp_link = os.path.join(pdf_dir, df1.loc[i, 'File Name'].replace('.docx', ext))
            if os.path.exists(temp_link):
                pdf_link = temp_link
                break
        if pdf_link == '':
            pdf_link = 'File does not exist'
        df_matched = pd.concat([df_matched, pd.DataFrame({'ExactID': [row2['ExactID']], 
                                            'Extracted Code': [df1.loc[i, 'Extracted Code']], 
                                            'File Name': [df1.loc[i, 'File Name']],
                                            'Similarity': [similarity_scores[0][0]], 
                                            'Remarks': ['Match Found'],
                                            'PDF Link': [pdf_link]})], ignore_index=True)
        df1.drop(i, inplace=True)
    else:
        df_matched = pd.concat([df_matched, pd.DataFrame({'ExactID': [row2['ExactID']], 
                                            'Extracted Code': ['N/A'], 
                                            'File Name': ['N/A'],
                                            'Similarity': [math.nan], 
                                            'Remarks': ['No Match Found'],
                                            'PDF Link': ['N/A']})], ignore_index=True)

for i, row1 in df1.iterrows():
    pdf_link = ''
    for ext in ['.pdf', '.jpg']:
        temp_link = os.path.join(pdf_dir, row1['File Name'].replace('.docx', ext))
        if os.path.exists(temp_link):
            pdf_link = temp_link
            break
    if pdf_link == '':
        pdf_link = 'File does not exist'
    df_unmatched = pd.concat([df_unmatched, pd.DataFrame({'Extracted Code': [row1['Extracted Code']], 
                                            'File Name': [row1['File Name']], 
                                            'PDF Link': [pdf_link]})], ignore_index=True)

# Create a new workbook and select the active worksheet
wb = xlsxwriter.Workbook(os.path.join(output_dir, 'output.xlsx'), {'nan_inf_to_errors': True})
ws_matched = wb.add_worksheet('Matched IDs')
ws_unmatched = wb.add_worksheet('Unmatched IDs')

red_format = wb.add_format({'bg_color': 'red'})

# Write matched data
for r_idx, row in df_matched.iterrows():
    for c_idx, value in enumerate(row):
        if pd.isnull(value):
            value = ''
        if c_idx == 5 and value.startswith("File does not exist"):  # PDF Link column
            ws_matched.write(r_idx+1, c_idx, value)
        elif c_idx == 5:
            ws_matched.write_url(r_idx+1, c_idx, value, string='Link')
        else:
            ws_matched.write(r_idx+1, c_idx, value)
        # Apply red fill to rows with similarity score less than 85%
        if c_idx == 3 and isinstance(value, float) and value < 0.85:
            ws_matched.set_row(r_idx+1, cell_format=red_format)

for r_idx, value in enumerate(df_matched.columns):
    ws_matched.write(0, r_idx, value)

# Write unmatched data
for r_idx, row in df_unmatched.iterrows():
    for c_idx, value in enumerate(row):
        if pd.isnull(value):
            value = ''
        if c_idx == 2 and value.startswith("File does not exist"):  # PDF Link column
            ws_unmatched.write(r_idx+1, c_idx, value)
        elif c_idx == 2:
            ws_unmatched.write_url(r_idx+1, c_idx, value, string='Link')
        else:
            ws_unmatched.write(r_idx+1, c_idx, value)

for r_idx, value in enumerate(df_unmatched.columns):
    ws_unmatched.write(0, r_idx, value)

# Save results
wb.close()
