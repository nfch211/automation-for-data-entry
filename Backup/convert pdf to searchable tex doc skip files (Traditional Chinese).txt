import os
import tkinter as tk
from tkinter import filedialog
from azure.ai.formrecognizer import DocumentAnalysisClient
from azure.core.credentials import AzureKeyCredential
from docx import Document

# Set your endpoint and key variables with the values from the Azure portal
endpoint = "https://fong.cognitiveservices.azure.com/"
key = "994ff965055f4d4084f81ec39d375723"

def select_input_folder():
    input_folder = filedialog.askdirectory(title="Select Input Folder")
    if input_folder:
        entry_input_folder.delete(0, tk.END)
        entry_input_folder.insert(tk.END, input_folder)

def select_output_folder():
    output_folder = filedialog.askdirectory(title="Select Output Folder")
    if output_folder:
        entry_output_folder.delete(0, tk.END)
        entry_output_folder.insert(tk.END, output_folder)

def analyze_general_documents(input_folder, output_folder):
    document_analysis_client = DocumentAnalysisClient(endpoint=endpoint, credential=AzureKeyCredential(key))

    for root, dirs, files in os.walk(input_folder):
        for file in files:
            file_path = os.path.join(root, file)
            file_ext = os.path.splitext(file)[1]
            if file_ext.lower() == ".pdf":
                with open(file_path, "rb") as f:
                    poller = document_analysis_client.begin_analyze_document("prebuilt-document", f)
                    result = poller.result()
                    doc = Document()
                    for page in result.pages:
                        for line in page.lines:
                            doc.add_paragraph(line.content)
                    output_file_path = os.path.join(output_folder, os.path.splitext(file)[0] + ".docx")
                    doc.save(output_file_path)

def convert_image_pdf_to_word():
    input_folder = entry_input_folder.get()
    output_folder = entry_output_folder.get()
    analyze_general_documents(input_folder, output_folder)

# Set up the Tkinter window
window = tk.Tk()
window.title("PDF to Word Converter")

# Create and place the input folder selection widgets
label_input_folder = tk.Label(window, text="Input Folder:")
label_input_folder.pack()

entry_input_folder = tk.Entry(window, width=50)
entry_input_folder.pack()

button_select_input_folder = tk.Button(window, text="Select", command=select_input_folder)
button_select_input_folder.pack()

# Create and place the output folder selection widgets
label_output_folder = tk.Label(window, text="Output Folder:")
label_output_folder.pack()

entry_output_folder = tk.Entry(window, width=50)
entry_output_folder.pack()

button_select_output_folder = tk.Button(window, text="Select", command=select_output_folder)
button_select_output_folder.pack()

# Create the conversion button
button_convert = tk.Button(window, text="Convert", command=convert_image_pdf_to_word)
button_convert.pack()

# Start the Tkinter event loop
window.mainloop()
