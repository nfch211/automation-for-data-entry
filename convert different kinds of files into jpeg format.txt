import os
import tkinter as tk
from tkinter import filedialog
from PIL import Image
from docx import Document
import fitz  # PyMuPDF

OUTPUT_FOLDER_NAME = "ConvertedImages"

def extract_images_from_docx(file_path, output_folder):
    doc = Document(file_path)
    rels = doc.part.rels.values()
    for index, rel in enumerate(rels):
        if "image" in rel.reltype:
            image_data = rel.target_part.blob
            image_ext = rel.target_part.content_type.split("/")[1]
            image_name = os.path.join(output_folder, f"{os.path.basename(file_path)}_image{index}.{image_ext}")
            with open(image_name, "wb") as img_file:
                img_file.write(image_data)

def convert_to_jpeg(input_file, output_folder):
    try:
        with Image.open(input_file) as im:
            output_path = os.path.join(output_folder, os.path.splitext(os.path.basename(input_file))[0] + ".jpeg")
            im.convert("RGB").save(output_path, "JPEG")
            print(f"Converted {input_file} to JPEG")
    except Exception as e:
        print(f"Failed to convert {input_file}. Error: {e}")

def convert_pdf_to_jpeg(pdf_file, output_folder):
    try:
        doc = fitz.open(pdf_file)
        for i in range(doc.page_count):
            page = doc.load_page(i)
            pix = page.get_pixmap()
            output = os.path.join(output_folder, os.path.splitext(os.path.basename(pdf_file))[0] + f"_page{i}.jpeg")
            pix.save(output)
        doc.close()
        print(f"Converted {pdf_file} to JPEG")
    except Exception as e:
        print(f"Failed to convert {pdf_file}. Error: {e}")

def convert_files(input_folder):
    if not os.path.exists(OUTPUT_FOLDER_NAME):
        os.makedirs(OUTPUT_FOLDER_NAME)

    for root, _, files in os.walk(input_folder):
        for file in files:
            file_path = os.path.join(root, file)
            if file_path.lower().endswith('.pdf'):
                convert_pdf_to_jpeg(file_path, OUTPUT_FOLDER_NAME)
            elif file_path.lower().endswith('.docx'):
                try:
                    extract_images_from_docx(file_path, OUTPUT_FOLDER_NAME)
                except Exception as e:
                    print(f"Failed to extract images from {file_path}. Error: {e}")
            elif file_path.lower().endswith(('.jpg', '.jpeg', '.png', '.tif', '.tiff', '.bmp')):
                convert_to_jpeg(file_path, OUTPUT_FOLDER_NAME)
            else:
                print(f"Unsupported file type: {file_path}")

def select_input_folder():
    input_folder = filedialog.askdirectory(title="Select Input Folder")
    if input_folder:
        convert_files(input_folder)

window = tk.Tk()
window.title("Files to JPEG Converter")

button_select_input_folder = tk.Button(window, text="Select Input Folder", command=select_input_folder)
button_select_input_folder.pack()

window.mainloop()
