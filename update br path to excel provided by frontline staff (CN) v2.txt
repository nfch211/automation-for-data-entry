import os
import openpyxl
import pandas as pd
import tkinter as tk
from tkinter import filedialog
from openpyxl.styles import Font, Border, Side


# Convert relative paths to absolute paths
def to_absolute_path(relative_path):
    return os.path.abspath(relative_path) if not relative_path.startswith("file:///") else relative_path


thin_border = Border(left=Side(style='thin'), 
                     right=Side(style='thin'), 
                     top=Side(style='thin'), 
                     bottom=Side(style='thin'))

def get_file_path(prompt):
    root = tk.Tk()
    root.withdraw()
    file_path = filedialog.askopenfilename(title=prompt, filetypes=[('Excel Files', '*.xlsx')])
    return file_path

def lim(br):
    return ''.join(filter(str.isalnum, str(br))).lower()

def update_excel(sheet, br_number, column, data_map, path_map=None):
    for row in range(2, sheet.max_row + 1):
        if lim(sheet.cell(row=row, column=5).value) == br_number:
            sheet.cell(row=row, column=column).value = data_map[br_number]

            # If path_map is provided, add hyperlinks
            if path_map and br_number in path_map:
                cell = sheet.cell(row=row, column=5)
                cell.hyperlink = path_map[br_number]
                cell.style = "Hyperlink"
                cell.border = thin_border  # Add this line to set the border

file_a_path = get_file_path("Select the 'work list' Excel file (A)")

# Automatically determine the path for Excel B
current_directory = os.getcwd()
file_b_path = os.path.join(current_directory, "HK BR Data.xlsx")

# Load Excel A
print("Loading Excel A...")
workbook_a = openpyxl.load_workbook(file_a_path)
sheet_a = workbook_a.active

# Load Excel B using pandas for easier data mapping
print("Loading Excel B...")
df_b = pd.read_excel(file_b_path, engine='openpyxl')
name_map = df_b.set_index(df_b["BR Number"].apply(lim))["Company Name"].to_dict()
address_map = df_b.set_index(df_b["BR Number"].apply(lim))["Company Address"].to_dict()
docx_address_map = df_b.set_index(df_b["BR Number"].apply(lim))["Docx Address"].to_dict()

# Ensure paths are in a clickable format
df_b["Original Source"] = df_b["Original Source"].apply(lambda x: "file:///" + to_absolute_path(x).replace('\\', '/') if not x.startswith("file:///") else x)
path_map = df_b.set_index(df_b["BR Number"].apply(lim))["Original Source"].to_dict()

# Update Excel A
print("Updating Excel A...")
for br_number in name_map:
    update_excel(sheet_a, br_number, 53, name_map, path_map)  # Update column BA
    update_excel(sheet_a, br_number, 54, address_map)          # Update column BB
    update_excel(sheet_a, br_number, 55, docx_address_map)     # Update column BC

# Save the changes to a new Excel file
workbook_a.save(file_a_path)
print(f"File updated successfully and saved as {file_a_path}!")
