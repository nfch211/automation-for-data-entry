import random
import time
import pickle
import re

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from bs4 import BeautifulSoup

def load_cookies(driver, url):
    try:
        driver.get(url)  # navigate to the site first before loading cookies
        cookies = pickle.load(open(r"C:\Users\hofong\Desktop\python\企查猫\cookies\cookies.pkl", "rb"))
        for cookie in cookies:
            driver.add_cookie(cookie)
        print("Cookies loaded successfully.")
        return True
    except FileNotFoundError:
        print("Cookie file not found. You will need to log in.")
        return False

def save_cookies(driver):
    pickle.dump(driver.get_cookies() , open(r"C:\Users\hofong\Desktop\python\企查猫\cookies\cookies.pkl","wb"))
    print("Cookies saved successfully.")

chrome_binary_location = r'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe'
chrome_driver_path = r'C:\Users\hofong\Desktop\python\企查猫\chromedriver.exe'

user_agents = [...]  # fill this with the list of your user-agents
search_counter = 0
change_ua_range = list(range(100, 151))

while True:
    user_agent = random.choice(user_agents)
    chrome_options = webdriver.ChromeOptions()
    chrome_options.binary_location = chrome_binary_location
    chrome_options.add_argument(f'user-agent={user_agent}')
    chrome_options.add_argument("--log-level=3")  # Suppress all messages except fatal errors
    chrome_options.add_argument("--headless")

    driver = webdriver.Chrome(service=Service(chrome_driver_path), options=chrome_options)

    if not load_cookies(driver, 'https://www.qichamao.com/'):
        # Show the browser only when not using existing cookies
        chrome_options = webdriver.ChromeOptions()  # create a new Options object
        chrome_options.binary_location = chrome_binary_location
        chrome_options.add_argument(f'user-agent={user_agent}')
        chrome_options.add_argument("--log-level=3")  # Suppress all messages except fatal errors

        driver = webdriver.Chrome(service=Service(chrome_driver_path), options=chrome_options)
        driver.get('https://www.qichamao.com/')

        print("Please perform the login manually in the web browser that just opened.")
        print("Once you are logged in successfully, come back to the terminal and press Enter to continue...")
        input()

        save_cookies(driver)
        driver.quit()

        chrome_options.add_argument("--headless")
        driver = webdriver.Chrome(service=Service(chrome_driver_path), options=chrome_options)
        load_cookies(driver, 'https://www.qichamao.com/')  # the cookies are loaded after navigating to the correct page

    driver.get('https://www.qichamao.com/')

    while True:
        br_number = input("Please input a BR number, or type 'quit' to stop: ")
        br_number = br_number.strip()
        if br_number.lower() == 'quit':
            break

        if br_number == '':
            print("Invalid BR number. Please enter a valid BR number.")
            continue

        data_url = f'https://www.qichamao.com/search/all/{br_number}'
        driver.get(data_url)

        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, 'body')))

        page_source = driver.page_source
        soup = BeautifulSoup(page_source, 'html.parser')

        company_name = soup.find('a', class_='listsec_tit')
        if company_name:
            print(f"BR number: {br_number}")
            print(f"Company Name: {company_name.text.strip()}")

        company_address = soup.find('span', string=re.compile('企业地址：'))
        if company_address:
            print(f"Company Address: {company_address.text.strip().replace('企业地址：', '')}")

        search_counter += 1
        if search_counter % random.choice(change_ua_range) == 0:
            print("Changing user-agent...")
            break

    driver.quit()

    time.sleep(5)
